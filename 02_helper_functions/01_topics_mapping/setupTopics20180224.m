function [topics] = setupTopicsMaster()
% topics mapping for the latest master

topics = struct;
topics.actuator_controls = ...
    struct('topic_name', 'actuator_controls_0', 'logged', false,...
    'fields', [string('timestamp_sample'), string('control_0'), string('control_1') , string('control_2'),...
    string('control_3'), string('control_4'), string('control_5'), string('control_6'), string('control_7')]);
topics.actuator_outputs = ...
    struct('topic_name', 'actuator_outputs', 'logged', false,...
    'fields', [string('noutputs'), string('output_0'), string('output_1') , string('output_2'),...
    string('output_3'), string('output_4'), string('output_5'), string('output_6'), string('output_7'),...
    string('output_8'), string('output_9'), string('output_10'), string('output_11'), string('output_12'),...
    string('output_13'), string('output_14'), string('output_15')]);
topics.airspeed = ...
    struct('topic_name', 'airspeed', 'logged', false,...
    'fields', [string('indicated_airspeed'), string('true_airspeed'), ...
    string('true_airspeed_unfiltered') , string('air_temperature'), string('confidence')]);
topics.battery_status = ...
    struct('topic_name', 'battery_status', 'logged', false,...
    'fields', [string('v'), string('v_filtered'), string('i'), string('i_filtered'), string('discharged_mah'),...
    string('remaining') , string('scale'), string('cell_count'), string('connected'), string('system_source'),...
    string('priority'), string('is_powering_off'), string('warning')]);
topics.commander_state = ...
    struct('topic_name', 'commander_state', 'logged', false,...
    'fields', [string('main_state')]);
topics.cpuload = ...
    struct('topic_name', 'commander_state', 'logged', false,...
    'fields', [string('load'), string('ram_usage'), string('test')]);
topics.control_state = ...
    struct('topic_name', 'control_state', 'logged', false,...
    'fields', [string('x_acc'), string('y_acc'), string('z_acc') , string('x_vel'), string('y_vel'), string('z_vel'),...
    string('x_pos'), string('y_pos'), string('z_pos'), string('airspeed'), string('vel_var_0'), string('vel_var_1'),...
    string('vel_var_2'), string('pos_var_0'), string('pos_var_1'), string('pos_var_2'), string('q0'), string('q1'),...
    string('q2'), string('q3'), string('delta_q_reset_0'), string('delta_q_reset_1'), string('delta_q_reset_2'),...
    string('delta_q_reset_3'), string('roll_rate'), string('pitch_rate'), string('yaw_rate'),...
    string('horz_acc_mag'), string('roll_rate_bias'), string('pitch_rate_bias'), string('yaw_rate_bias'),...
    string('airspeed_valid'), string('quat_reset_counter')]);
topics.cpuload = ...
    struct('topic_name', 'cpuload', 'logged', false,...
    'fields', [string('load'), string('ram_usage')]);
topics.differential_pressure = ...
    struct('topic_name', 'differential_pressure', 'logged', false,...
    'fields', [string('error_count'), string('differential_pressure_raw'),...
    string('differential_pressure_filtered'), string('temperature'), string('device_id')]);
topics.distance_sensor = ...
    struct('topic_name', 'distance_sensor', 'logged', false,...
    'fields', [string('min_dist'), string('max_dist'), string('current_dist'),...
    string('covariance'), string('type'), string('id'), string('orientation')]);
topics.ekf2_innovations = ...
    struct('topic_name', 'ekf2_innovations', 'logged', false,...
    'fields', [string('vel_pos_0'), string('vel_pos_1'), string('vel_pos_2') , string('vel_pos_3'),...
    string('vel_pos_4'), string('vel_pos_5'), string('mag_0'), string('mag_1'), string('mag_2'), string('heading'),...
    string('airspeed'), string('beta'), string('flow_0'), string('flow_1'), string('hagl'), string('vel_pos_0_var'),...
    string('vel_pos_1_var'), string('vel_pos_2_var'), string('vel_pos_3_var'), string('vel_pos_4_var'),...
    string('vel_pos_5_var'), string('mag_0_var'), string('mag_1_var'), string('mag_2_var'), string('heading_var'),...
    string('airspeed_var'), string('beta_var'), string('flow_0_var'), string('flow_1_var'), string('hagl_var'),...
    string('output_tracking_error_0'), string('output_tracking_error_1'), string('output_tracking_error_2'),...
    string('drag_0'), string('drag_1'), string('drag_0_var'), string('drag_1_var'), string('aux_vel0'), string('aux_vel1')]);
topics.ekf2_timestamps = ...
    struct('topic_name', 'ekf2_timestamps', 'logged', false,...
    'fields', [string('gps_timestamp_rel'), string('optical_flow_timestamp_rel'),...
    string('distance_sensor_timestamp_rel'), string('airspeed_timestamp_rel'), ...
    string('vision_position_timestamp_rel'), string('vision_attitude_timestamp_rel')]);
topics.estimator_status = ...
    struct('topic_name', 'estimator_status', 'logged', false,...
    'fields', [string('states_0'), string('states_1'), string('states_2') , string('states_3'),...
    string('states_4'), string('states_5'), string('states_6'), string('states_7'), string('states_8'), string('states_9'),...
    string('states_10'), string('states_11'), string('states_12'), string('states_13'), string('states_14'), string('states_15'),...
    string('states_16'), string('states_17'), string('states_18'), string('states_19'), string('states_20'),...
    string('states_21'), string('states_22'), string('states_23'), string('n_states'), string('vibe_0'),...
    string('vibe_1'), string('vibe_2'), string('covar_0'), string('covar_1'), string('covar_2'), string('covar_3'),...
    string('covar_4'), string('covar_5'), string('covar_6'), string('covar_7'), string('covar_8'), string('covar_9'),...
    string('covar_10'), string('covar_11'), string('covar_12'), string('covar_13'), string('covar_14'), string('covar_15'),...
    string('covar_16'), string('covar_17'), string('covar_18'), string('covar_19'), string('covar_20'), string('covar_21'),...
    string('covar_22'), string('covar_23'), string('control_mode_flags'), string('pos_horiz_accuracy'),...
    string('pos_vert_accuracy'), string('mag_test_ratio'), string('vel_test_ratio'), string('pos_test_ratio'),...
    string('hgt_test_ratio'), string('tas_test_ratio'), string('hagl_test_ratio'), string('beta_test_ratio'), string('time_slip'),...
    string('gps_check_fail_flags'), string('filter_fault_flags'), string('innovation_check_flags'),...
    string('solution_status_flags'), string('nan_flags'), string('health_flags'), string('timeout_flags'), string('test')]);
topics.home_position = ...
    struct('topic_name', 'home_position', 'logged', false,...
    'fields', [string('lat'), string('lon'), string('alt'),...
    string('x'), string('y'), string('z'), string('yaw'), string('valid_alt'),...
    string('valid_hpos'), string('manual_home')]);
topics.input_rc = ...
    struct('topic_name', 'input_rc', 'logged', false,...
    'fields', [string('timestamp_last_signal'), string('channel_count'), string('rssi'),...
    string('rc_lost_frame_count'), string('rc_total_frame_count'), string('rc_ppm_frame_length'),...
    string('val_0'), string('val_1'), string('val_2'), string('val_3'), string('val_4'), string('val_5'), string('val_6'),...
    string('val_7'), string('val_8'), string('val_9'), string('val_10'), string('val_11'), string('val_12'), string('val_13'),...
    string('val_14'), string('val_15'), string('val_16'), string('val_17'), string('rc_failsafe'), string('rc_lost'),...
    string('input_source')]);
topics.manual_control_setpoint = ...
    struct('topic_name', 'manual_control_setpoint', 'logged', false,...
    'fields', [string('x'), string('y'), string('z'),string('r'), string('flaps'), string('aux1'),...
    string('aux2'), string('aux3'), string('aux4'), string('aux5'), string('mode_switch'),...
    string('return_switch'), string('rattitude_switch'), string('posctl_switch'),...
    string('loiter_switch'), string('acro_switch'), string('offboard_switch'),...
    string('kill_switch'), string('arm_switch'), string('transition_switch'),...
    string('gear_switch'), string('mode_slot'), string('data_source'), string('stab_switch'),...
    string('man_switch')]);
topics.mission_result = ...
    struct('topic_name', 'mission_result', 'logged', false,...
    'fields', [string('instance_count'), string('seq_reached'), string('seq_current'),...
    string('seq_total'), string('item_changed_index'), string('item_do_jump_remaining'),...
    string('valid'), string('warning'), string('finished'), string('failure'), string('stay_in_failsafe'),...
    string('flight_termination'), string('item_do_jump_changed')]);
topics.position_setpoint_triplet = ...
    struct('topic_name', 'position_setpoint_triplet', 'logged', false,...
    'fields', [string('prev_timestamp'), string('prev_lat'), string('prev_lon') , string('prev_x'),...
    string('prev_y'), string('prev_z'), string('prev_vx'), string('prev_vy'), string('prev_vz'), string('prev_alt'),...
    string('prev_yaw'), string('prev_yawspeed'), string('prev_loiter_radius'), string('prev_pitch_min'),...
    string('prev_a_x'), string('prev_a_y'), string('prev_a_z'), string('prev_acceptance_radius'), string('prev_cruising_speed'),...
    string('prev_cruising_throttle'), string('prev_valid'), string('prev_type'), string('prev_position_valid'),...
    string('prev_velocity_valid'), string('prev_velocity_frame'), string('prev_alt_valid'), string('prev_yaw_valid'),...
    string('prev_disable_mc_yaw_control'), string('prev_yawspeed_valid'), string('prev_loiter_direction'),...
    string('prev_acceleration_valid'), string('prev_acceleration_is_force'),...
    string('curr_timestamp'), string('curr_lat'), string('curr_lon') , string('curr_x'),...
    string('curr_y'), string('curr_z'), string('curr_vx'), string('curr_vy'), string('curr_vz'), string('curr_alt'),...
    string('curr_yaw'), string('curr_yawspeed'), string('curr_loiter_radius'), string('curr_pitch_min'),...
    string('curr_a_x'), string('curr_a_y'), string('curr_a_z'), string('curr_acceptance_radius'), string('curr_cruising_speed'),...
    string('curr_cruising_throttle'), string('curr_valid'), string('curr_type'), string('curr_position_valid'),...
    string('curr_velocity_valid'), string('curr_velocity_frame'), string('curr_alt_valid'), string('curr_yaw_valid'),...
    string('curr_disable_mc_yaw_control'), string('curr_yawspeed_valid'), string('curr_loiter_direction'),...
    string('curr_acceleration_valid'), string('curr_acceleration_is_force'),...
    string('next_timestamp'), string('next_lat'), string('next_lon') , string('next_x'),...
    string('next_y'), string('next_z'), string('next_vx'), string('next_vy'), string('next_vz'), string('next_alt'),...
    string('next_yaw'), string('next_yawspeed'), string('next_loiter_radius'), string('next_pitch_min'),...
    string('next_a_x'), string('next_a_y'), string('next_a_z'), string('next_acceptance_radius'), string('next_cruising_speed'),...
    string('next_cruising_throttle'), string('next_valid'), string('next_type'), string('next_position_valid'),...
    string('next_velocity_valid'), string('next_velocity_frame'), string('next_alt_valid'), string('next_yaw_valid'),...
    string('next_disable_mc_yaw_control'), string('next_yawspeed_valid'), string('next_loiter_direction'),...
    string('next_acceleration_valid'), string('next_acceleration_is_force')]);
topics.rc_channels = ...
    struct('topic_name', 'rc_channels', 'logged', false,...
    'fields', [string('timestamp_last_valid'), string('channels0'), string('channels1'),...
    string('channels2'), string('channels3'), string('channels4'), string('channels5'),...
    string('channels6'), string('channels7'), string('channels8'), string('channels9'),...
    string('channels10'), string('channels11'), string('channels12'), string('channels13'),...
    string('channels14'), string('channels15'), string('channels16'), string('channels17'),...
    string('frame_drop_count'), string('channel_count'), string('function0'),...
    string('function1'), string('function2'), string('function3'), string('function4'),...
    string('function5'), string('function6'), string('function7'), string('function8'),...
    string('function9'), string('function10'), string('function11'), string('function12') ,...
    string('function13'), string('function14'), string('function15'), string('function16'),...
    string('function17'), string('function18'), string('function19'), string('function20'),...
    string('function21'), string('function22'), string('function23'), string('function24'),...
    string('function25'), string('rssi'), string('signal_lost')]);
topics.sensor_combined = ...
    struct('topic_name', 'sensor_combined', 'logged', false,...
    'fields', [string('gyro_0'), string('gyro_1'), string('gyro_2') , string('gyro_integral_dt'),...
    string('acc_timestamp_relative'), string('acc_0'), string('acc_1'), string('acc_2'), string('acc_integral_dt'),...
    string('mag_timestamp_relative'), string('mag_0'), string('mag_1'), string('mag_2'),...
    string('baro_timestamp_relative'), string('baro_alt'), string('baro_temp')]);
topics.sensor_preflight = ...
    struct('topic_name', 'sensor_preflight', 'logged', false,...
    'fields', [string('acc_inconsistency'), string('gyro_inconsistency'), string('mag_inconsystency')]);
topics.sensor_accel = ...
    struct('topic_name', 'sensor_accel', 'logged', false,...
    'fields', [string('integral_dt'), string('error_count'), string('x'), string('y'), string('z'), string('x_integral'),...
    string('y_integral'), string('z_integral'), string('temperature'), string('range_m_s2'), string('scaling'),...
    string('device_id'), string('x_raw'), string('y_raw'), string('z_raw'), string('temperature_raw')]);
topics.sensor_baro = ...
    struct('topic_name', 'sensor_baro', 'logged', false,...
    'fields', [string('error_count'), string('pressure'), string('altitude'), string('temperature'),...
    string('device_id')]);
topics.sensor_gyro = ...
    struct('topic_name', 'sensor_gyro', 'logged', false,...
    'fields', [string('integral_dt'), string('error_count'), string('x'), string('y'), string('z'), string('x_integral'),...
    string('y_integral'), string('z_integral'), string('temperature'), string('range_rad_s'), string('scaling'),...
    string('device_id'), string('x_raw'), string('y_raw'), string('z_raw'), string('temperature_raw')]);
topics.sensor_mag = ...
    struct('topic_name', 'sensor_mag', 'logged', false,...
    'fields', [string('error_count'), string('x'), string('y'), string('z'), string('range_ga'), string('scaling'), ...
    string('temperature'), string('device_id'), string('x_raw'), string('y_raw'), string('z_raw'), string('is_external')]);
topics.system_power = ...
    struct('topic_name', 'system_power', 'logged', false,...
    'fields', [string('voltage5V'), string('voltage3.3V'), string('v3.3V_valid'), string('usb_connected'),...
    string('brick_valid'), string('usb_valid'), string('servo_valid'), string('periph_5V_OC'), string('hipower_5V_OC')]);
topics.task_stack_info = ...
    struct('topic_name', 'task_stack_info', 'logged', false,...
    'fields', [string('stack_free'), string('task_0'), string('task_1') , string('task_2'),...
    string('task_3'), string('task_4'), string('task_5'), string('task_6'), string('task_7'), string('task_8'),...
    string('task_9'), string('task_10'), string('task_11'), string('task_12'),...
    string('task_13'), string('task_14'), string('task_15')]);
topics.tecs_status = ...
    struct('topic_name', 'tecs_status', 'logged', false,...
    'fields', [string('altitudeSp'), string('altitude_filtered'), string('flightPathAngleSp'),...
    string('flightPathAngle'), string('airspeedSp'), string('airspeed_filtered'),...
    string('airspeedDerivativeSp'), string('airspeedDerivative'), string('totalEnergyError'),...
    string('energyDistributionError'), string('totalEnergyRateError'), string('energyDistributionRateError'),...
    string('throttle_integ'), string('pitch_integ'), string('mode')]);
topics.telemetry_status = ...
    struct('topic_name', 'telemetry_status', 'logged', false,...
    'fields', [string('heartbeat_time'), string('telem_time'), string('rxerrors'), string('fixed'),...
    string('type'), string('rssi'), string('remote_rssi'), string('noise'), string('remote_noise'), string('txbuf'),...
    string('system_id'), string('component_id')]);
topics.vehicle_attitude = ...
    struct('topic_name', 'vehicle_attitude', 'logged', false,...
    'fields', [string('rollspeed'), string('pitchspeed'), string('yawspeed'), string('q_0'),...
    string('q_1'), string('q_2'), string('q_3'), string('delta_q_reset_0'), string('delta_q_reset_1')...
    string('delta_q_reset_2'), string('delta_q_reset_3'), string('quat_reset_counter')]);
topics.vehicle_attitude_setpoint = ...
    struct('topic_name', 'vehicle_attitude_setpoint', 'logged', false,...
    'fields', [string('roll_body'), string('pitch_body'), string('yaw_body'), string('yaw_sp_move_rate'),...
    string('q_d_0'), string('q_d_1'), string('q_d_2'), string('q_d_3'), string('thrust'), string('landing_gear'),...
    string('q_d_valid'), string('roll_reset_integral'), string('pitch_reset_integral'),...
    string('yaw_reset_integral'), string('fw_control_yaw'), string('disable_mc_yaw_control'),...
    string('apply_flaps')]);
topics.vehicle_command = ...
    struct('topic_name', 'vehicle_command', 'logged', false,...
    'fields', [string('param5'), string('param6'), string('param1'), string('param2'), string('param3'),...
    string('param4'), string('param7'), string('command'), string('target_system'), string('target_component'),...
    string('source_system'), string('source_component'), string('confirmation'), string('from_external')]);
topics.vehicle_control_mode = ...
    struct('topic_name', 'vehicle_control_mode', 'logged', false,...
    'fields', [string('flag_armed'), string('flag_external_manual_override_ok'),...
    string('flag_system_hil_enabled'), string('flag_control_manual_enabled'),...
    string('flag_control_auto_enabled'), string('flag_control_offboard_enabled'),...
    string('flag_control_rates_enabled'), string('flag_control_attitude_enabled'),...
    string('flag_control_rattitude_enabled'), string('flag_control_force_enabled'),...
    string('flag_control_acceleration_enabled'), string('flag_control_velocity_enabled'),...
    string('flag_control_position_enabled'), string('flag_control_altitude_enabled'),...
    string('flag_control_climb_rate_enabled'), string('flag_control_termination_enabled'),...
    string('flag_control_fixed_hdg_enabled')]);
topics.vehicle_global_position = ...
    struct('topic_name', 'vehicle_global_position', 'logged', false,...
    'fields', [string('lat'), string('lon'), string('alt'), string('delta_alt'), string('vel_n'), string('vel_e'),...
    string('vel_d'), string('pos_d_deriv'), string('yaw'), string('eph'), string('epv'), string('evh'), string('evv'),...
    string('terrain_alt'), string('pressure_alt'), string('lat_lon_reset_counter'), string('alt_reset_counter'), ...
    string('terrain_alt_valid'), string('dead_reckoning')]);
topics.vehicle_gps_position = ...
    struct('topic_name', 'vehicle_gps_position', 'logged', false,...
    'fields', [string('time_utc'), string('lat'), string('lon'), string('alt'), string('alt_ellipsoid')...
    string('s_variance'), string('c_variance'), string('eph'), string('epv'), string('hdop'), string('vdop'),...
    string('noise_per_ms'), string('jamming_indicator'), string('vel'), string('vel_n'), string('vel_e'), string('vel_d'),...
    string('cog'), string('timestamp_time_relative'), string('fix_type'),...
    string('vel_ned_valid'), string('satellites_used')]);
topics.vehicle_land_detection = ...
    struct('topic_name', 'vehicle_land_detection', 'logged', false,...
    'fields', [string('alt_max'), string('landed'), string('freefall'), string('ground_contact')]);
topics.vehicle_local_position = ...
    struct('topic_name', 'vehicle_local_position', 'logged', false,...
    'fields', [string('ref_timestamp'), string('ref_lat'), string('ref_lon'), ...
    string('x'), string('y'), string('z'), string('delta_xy_0'),...
    string('delta_xy_1'), string('delta_z'), string('vx'), string('vy'), string('vz'), string('z_deriv'), string('delta_vxy_0'),...
    string('delta_vxy_1'), string('delta_vz'), string('ax'), string('ay'), string('az'), string('yaw'), string('ref_alt'),...
    string('dist_bottom'), string('dist_bottom_rate'), string('eph'), string('epv'), string('evh'), string('evv'),...
    string('vxy_max'), string('xy_valid'), string('z_valid'), string('v_xy_valid'), string('v_z_valid'),...
    string('xy_reset_counter'), string('z_reset_counter'), string('vxy_reset_counter'), string('vz_reset_counter'),...
    string('xy_global'), string('z_global'), string('dist_bottom_valid'), string('limit_hagl')]);
topics.vehicle_rates_setpoint = ...
    struct('topic_name', 'vehicle_rates_setpoint', 'logged', false,...
    'fields', [string('roll'), string('pitch'), string('yaw'), string('thrust')]);
topics.vehicle_status = ...
    struct('topic_name', 'vehicle_status', 'logged', false,...
    'fields', [string('onboard_control_sensors_present'), string('onboard_control_sensors_enabled'),...
    string('onboard_control_sensors_health'), string('nav_state'), string('arming_state'),...
    string('hil_state'), string('failsafe'), string('system_type'), string('system_id'), string('component_id'),...
    string('is_rw'), string('is_vtol'), string('vtol_fw_permanent_stab'), string('in_transition_mode'), string('in_transition_to_fw')...
    string('rc_signal_lost'), string('rc_input_mode'), string('data_link_lost'), ...
    string('data_link_lost_counter'), string('engine_failure'), string('mission_failure')]);
topics.vehicle_status_flags = ...
    struct('topic_name', 'vehicle_status_flags', 'logged', false,...
    'fields', [string('condition_calibration_enabled'), string('condition_system_sensors_initialized'),...
    string('condition_system_prearm_error_reported'), string('condition_system_hotplug_timeout'),...
    string('condition_system_returned_to_home'), string('condition_auto_mission_available'),...
    string('condition_global_position_valid'), string('condition_global_velocity_valid'),...
    string('condition_home_position_valid'), string('condition_local_position_valid'),...
    string('condition_local_velocity_valid'), string('condition_local_altitude_valid'),...
    string('condition_power_input_valid'), string('circuit_breaker_engaged_power_check')...
    string('circuit_breaker_engaged_airspd_check'), string('circuit_breaker_engaged_enginefailure_check'),...
    string('circuit_breaker_engaged_gpsfailure_check'), string('circuit_breaker_flight_termination_disabled'),...
    string('circuit_breaker_engaged_usb_check'), string('circuit_breaker_engaged_posfailure_check'),...
    string('offboard_control_signal_found_once'), string('offboard_control_signal_lost'),...
    string('offboard_control_set_by_command'), string('offboard_control_loss_timeout'),...
    string('rc_signal_found_once'), string('rc_input_blocked'), string('vtol_transition_failure'),...
    string('usb_connected')]);
topics.wind_estimate = ...
    struct('topic_name', 'wind_estimate', 'logged', false,...
    'fields', [string('north'), string('east'), string('var_north'), string('var_east')]);